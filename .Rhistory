qplot(mpg, geom="histogram",
binwidth=4,fill=I("salmon"),col=I("blue")) +
stat_function(fun = 8*dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg))
)
with(mtcars,
qplot(mpg, geom="histogram",
binwidth=4,fill=I("salmon"),col=I("blue")) +
stat_function(fun = (8*dnorm), size = 2,
mean=mean(mpg), sd=sd(mpg))
)
x = mtcars$mpg;
# overlay histogram, empirical density and normal density
p0 = qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
opts(legend.position = c(0.85, 0.85))
print(p0)
x <- mtcars$mpg;
# overlay histogram, empirical density and normal density
p0 <- qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
opts(legend.position = c(0.85, 0.85))
print(p0)
x <- mtcars$mpg;
# overlay histogram, empirical density and normal density
p0 <- qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue'))
print(p0)
x <- rnorm(1000);
# overlay histogram, empirical density and normal density
p0 <- qplot(x, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue'))
print(p0)
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), binwidth=4,alpha = 0.4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), binwidth=4,alpha = 0.4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg)))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..)) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg))
)
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), binwidth=4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg)))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), colour="salmon",binwidth=4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg)))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), fill="salmon", colour="blue",binwidth=4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2,
mean=mean(mpg), sd=sd(mpg)))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), fill="salmon", colour="blue",binwidth=4) +
geom_line(aes(y = ..density..), stat = 'density') +
stat_function(fun = dnorm, size = 2))
with(mtcars,
qplot(mpg, geom="blank") +
geom_histogram(aes(y = ..density..), fill="salmon", colour="blue",binwidth=4) +
geom_line(aes(y = ..density..), stat = 'density'))
install_from_swirl("Statistical Inference")
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
5/13
4/52
13/52
info()
play()
nxt()
0
13/52
12/52
1/12
2/12
2/51
(1.6+.8)/2
(1.6*.8)/2
.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
.997*.001
(1-.000997)*(1-.001)
(1-.985)*(1-.001)
.000997/(.000997+.014985)
sum(1:6)/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,mean,1)
apply(allsam,1,mean)
mean(smeans)
dice_sq
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr*dice_fair)-edh^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(Poisson(4),10 ),1,mean))
sd(apply(matrix(rpois(4),10 ),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
play()
chose(4,2)
choose(4,2)
nxt()
choose(5,3)*.8^3*.2^2
x=c(1,2,3);sum(choose(5,x)*0.8^x*.2^(5-x))
x=c(3,4,5);sum(choose(5,x)*0.8^x*.2^(5-x))
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(10)
qnorm(.10)
0
qnorm(.975,3,2)
3+2(1.96)
3+2*(1.96)
pnorm(1200,1020,50,lower.tail=FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75,1020,50,lower.tail=TRUE)
.53
.53
ppois(3,2.4*4)
ppois(3,2.5*4)
pbinom(1000,5,.01)
pbinom(5,1000,.01)
ppois(5,10)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6+c(-1,1)*qnorn(.975)*sqrt(.6*.4/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf
binom.test(60,100)$conf.int
mywald(.2)
ACCOmpar(20)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf.int
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20.)
sleep
range(g1)
range(g2)
difference <- g1-g2
difference <- g2-g1
mean(difference)
s <- sd(difference)
c(-1,1)*qt(.975,9)*s/sqrt(10)
mn+c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
swirl()
(8-1)*15.34^2+(21-1)*18.23^2
sp <- 7*15.34^2 + 20*18.23^2
ns <- 27
sp <- sp/ns
sp <- sqrt(sp/ns)
(132.86-127.44)+c(-1,1)*t_(.975,(8+21-2))*sp*(1/8+1/21)^2
(132.86-127.44)+c(-1,1)*t.test(.975,(8+21-2))*sp*(1/8+1/21)^2
(132.86-127.44)+c(-1,1)*qt(.975,(8+21-2))*sp*(1/8+1/21)^2
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
(9*var(g1)+9*var(g2))/18
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp*sqrt()
sp*sqrt(1/10+1/0)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$CONF
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf.int
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34/8+18.23/21)
num <- (15.34^2/8+18.23^2/21)
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8^2/7 + 18.23/21^2/20)
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86-127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/7+18.23^2/20)
132.86-127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/SQRT(32)
10/sqrt(32)
10/sqrt(100)
swirl()
10/sqrt(100)
2
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
swirl()
1
2
swirl()
pt(q=2.5,df=15,lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
MYBIN
mybin
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(7,lower.tail=TRUE)
pbinom(7,size=8lower.tail=TRUE)
pbinom(7,size=8,lower.tail=TRUE)
pbinom(7,size=8,prob=0.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
siwrl()
swirl()
swirl()
library(swirl)
install_from_swirl("Regression Models")
swirl
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones +
| parent -1, galton)
lm(child ~ ones + parent -1, galton)
lm(child ~  parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height +
Constant -1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertility ~ .)
lm(Fertility ~ ., data=swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination,Education)
cor(Examination,Education,data=swiss)
cor
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec)
efit <- lm(Fertility ~ . + ec, data = swiss)
all$coef - efit$coef
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
names(sx)
sA
summary(InsectSprays[,2])
sapply(InsectSpray,class)
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data=InsectSprays)
summary(fit)
summary(fit)$ oef
summary(fit)$coef
est <- fit[,1]
est <- fit$coef[,1]
fit
est <- summary(fit)$coef[,1]
mean(sA$counts)
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, data=InsectSprays)
nfit$coef
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray - 1, data=InsectSprays)
fit2 <- lm(count ~ spray , data=InsectSprays)
fit2 <- lm(count ~ spray2 , data=InsectSprays)
summary(fit2)$coef
mean(sC)
((fit$coef[2]) - (fit$coef[3]))/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
din(hunger)
dim(hunger)
948
names(hunger)
lm(Numeric~Year)
lm(Numeric~Year,data=hunger)
fit <- lm(Numeric~Year,data=hunger)
sumary(fit)$coef
summary(fit)$coef
lmf <- lm(Numeric~Year,data=hunger)
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric[Sex=="Female" or "Male"] ~ Year[Sex=="Female" or "Male"],hunger)
lmBoth <- lm(Numeric[Sex=="Female", Sex== "Male"] ~ Year[Sex=="Female", Sex=="Male"],hunger)
lmBoth <- lm(Numeric[Sex=="Female", Sex== "Male"] ~ Year[Sex=="Female" Sex=="Male"],hunger)
lmBoth <- lm(Numeric[Sex=="Female"| Sex== "Male"] ~ Year[Sex=="Female" | Sex=="Male"],hunger)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
summary(lmBoth)
lmInter <- lm(Numeric ~Year+Sex+Sex*Teay,data=hunger)
lmInter <- lm(Numeric ~Year+Sex+Sex*Year,data=hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fit <- lm(y ~ x, out2[-1,])
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fit)-coef(fitno)
View(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- residual(sum())
sigma <- residual(sum())
sigma <- residual(sum())
sigma <- residual(sum())
sigma <- res(sum())
sigma <- resid(sum())
1-resid(fit)[1]/resno
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit) /sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
View(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- resid(fitno)/resid(15)
sigma <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1 * sqrt(1-hatvalues(fit)[1]))
View(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
View(swiss)
mdl <- lm(Fertility~Agriculture+Examination+Education+Catholic+Mortality,data=swiss)
mdl <- lm(Fertility~Agriculture+Examination+Education+Catholic+Infant.Mortality,data=swiss)
vif(mdl)
mdl2 <- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality,data=swiss)
vif(mdl2)
x1c <- simbias()
pply(x1c, 1, mean)
apply(x1c, 1, mean)
fit1 <- ANOVA(Fertility~Agriculture,data=swiss)
fit1 <- lm(Fertility~Agriculture,data=swiss)
fit3 <- lm(Fertility~Agriculture+Examination+Education,data=swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43,  lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, familiy, ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, familiy, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, ravenWinNum, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, ravenWin, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, ravenWin, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family=binomial,data=ravenData)
predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- offset=log(visits+1)
qpois(.95, lambda)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data =          hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
install.packages("rattle")
install.packages("caret")
install.packages("ggplot2")
install.packages("rplotengine")
install.packages("rpart")
install.packages("rpart.plot")
install.packages("rattle")
install.packages("randomForest")
M <- read.csv("melate.csv")
head(M)
dim(M)
R <- subset(M, select=c("R1","R2", "R3", "R4", "R5", "R6", "R7"))
head(R)
plot(R)
install.packages("data.table")
install.packages("data.table")
install.packages("logspline")
source('~/.active-rstudio-document', echo=TRUE)
?dbeta
source('~/.active-rstudio-document', echo=TRUE)
?rnorm
---
install.packages("shiny")
install.packages("shiny")
library(shiny)
system.file("examples", package="shiny")
runExample("02_text")
library(shiny)
runExample("02_text")
runExample("03_reactivity")
runExample("04_mpg")
runExample("05_sliders")
runExample("06_tabsets")
runExample("07_widgets")
runExample("08_html")
runExample("11_timer")
runExample("10_download")
setwd("C:/Users/TOSHIBA/Desktop/Marquez - Coursera/Curso 9 - Developing data Products/PRMG")
install.packages("stringi",type="win.binary")
install.packages("dygraphs")
install.packages(c("htmlwidgets","xts","zoo","rmarkdown","yaml","dygraphs"),lib="/usr/local/lib/R/site-library",dependencies=TRUE)
install.packages(c("htmlwidgets","xts","zoo","rmarkdown","yaml","dygraphs"),dependencies=TRUE)
slidify('index.Rmd')
library(slidify)
library(slidifyLibraries)
slidify('index.Rmd')
browseURL('index.html')
install.packages("dygraphs")
lungDeaths <- cbind(mdeaths, fdeaths)
dygraph(lungDeaths)
library(dygraphs)
lungDeaths <- cbind(mdeaths, fdeaths)
dygraph(lungDeaths)
slidify('index.Rmd')
browseURL('index.html')
devtools::install_github('rstudio/rsconnect')
shinyapps::setAccountInfo(name='pemar', token='933028EB395C83FC1EBEE1C99ED190E4', secret='RX9JSy4sN8a7jR3WzB++CU8/Huu94q69gS+Z01Js')
install_github( repo = "shinyapps", username="rstudio" )
devtools::install_github( repo = "shinyapps", username="rstudio" )
devtools::install_github( repo = "rstudio/shinyapps", username="rstudio" )
shinyapps::setAccountInfo(name='pemar', token='933028EB395C83FC1EBEE1C99ED190E4', secret='RX9JSy4sN8a7jR3WzB++CU8/Huu94q69gS+Z01Js')
install.packages(c('ggplot2', 'shiny'))
install.packages(c("ggplot2", "shiny"))
